 	{
		"type": "Blog",
		"title": "Memorizing, Part II",
		"text": "In part 1 of this series, I presented the concept of linking, which I first discovered while reading <i>The Memory Book</i> by Harry Lorayne and Jerry Lucas. I recommend reading this book if you’re interested in learning more about memorization than what’s presented in these blog entries. </p><p>The basic concept of linking is associating something easily remembered or apparent with something you’d like to remember. Using this method, memorizing a list can be reduced to memorizing a single item. Let’s say your list is &ldquo;cat, dog, squirrel, hamster&rdquo;. For whatever reason, you’d like to remember this list. First, you start with visualizing a cat. Hopefully you can remember this first item in your list. Then, you associate the known (cat) with the next unknown (dog) in some way. For example, you can picture that cat you visualized before as being chased by a dog. Sillier pictures are better, but this will do for now. Now that you’ve remembered &ldquo;dog&rdquo;, you can picture this dog chasing a squirrel. Remembering the dog will force you to remember the squirrel. Next, picture the squirrel fighting the hamster. This absurd image will ensure that you never forget what comes after the squirrel.  In this way, we’ve reduced a list down to just its first element. After remembering the first element, the links you’ve formed will allow you to recall the rest of the list in order easily. </p><p>One problem with this idea is that not all lists are inherently visual. An alphabetical list of the 50 U.S. States can be tough to picture in your head. To memorize a non-visual list, you must first substitute each word or phrase with a visual word or phase. For example, to remember North Carolina, picture a line of carolers heading north. This &ldquo;north carol line&rdquo; will easily harken back to North Carolina, and it’s much easier to remember than North Carolina by itself. This technique is called substitution. Replace a desired phrase with a similar-sounding phrase that is easier to visualize. </p><p>Let’s learn one more technique before putting it all together. This technique is called abstraction. If you want to remember a speech, you are hopefully knowledgeable enough about the topic that you can speak without aid. However, sometimes getting started or transitioning from one idea to another can cause you to stumble. So first, break down your speech into paragraphs, where each paragraph presents a single idea. This idea is an abstraction of an entire paragraph. Assuming you can ad lib the paragraph given just the central idea, all you need to remember is the abstract idea or phrase for each paragraph in your speech. Substituting the ideas with visual words, and then linking the visual words together, is an easy way to memorize a speech. </p><p>To summarize, remembering anything can be reduced to abstracting it, applying substitution, and linking it with something known. Abstraction and substitution may not be required in all cases. Also, adjustments may be necessary to memorize dates or numbers, but the general idea still applies.",
 		"author": "Stevo",
		"tags": [
        		"memory",
            "clarity"
		],
		"month": "March",
		"day": 10,
		"year": 2013
 	},
 	{
		"type": "Blog",
		"title": "Radiation-Induced Soft Errors",
		"text": "Computer chip circuits rely on voltages to store and propagate 0s and 1s. Memory circuits, like static random-access memory (SRAM), store 0s and 1s as voltages in a positive feedback loop (cross-coupled inverters).  Combinational circuits, like logic gates, use input voltage levels to calculate output values. Proper operation requires these voltages stay fixed until the next computation. However, radiation strikes can alter node voltages in both memory and logic, potentially causing a soft error. Soft errors, as opposed to hard errors, are not permanent. </p><p>Soft errors in memory have been studied extensively. When a particle strikes a node (in particular, a PN junction), it imparts a charge. If this charge is greater than some critical value, the charge will overpower the cross-coupled inverters and flip the stored bit.  Because SRAM cells are so small, a single particle may strike and flip multiple bits. To function properly, SRAMs use error-correcting codes (ECCs) and redundancy. Additionally, interleaving the words in memory can prevent multiple upsets to the same word, reducing the necessary amount of ECC. </p><p>Outside of memory, soft errors are less detrimental. When a particle strikes a node in logic, it must propagate to the next flip-flop and arrive within the latching window to cause an error. The chance of this happening is small. Also, if the flip-flop is ultimately unimportant to the architectural state, the error is benign. For these reasons, the soft error rate of combinational logic is much lower than that of memory, and much less research has been done in this area. </p><p>As the desire for energy reduction lowers voltage levels, radiation-induced soft errors may occur more frequently in both logic and memory. <a href=\"projects.htm?project=upset\">This class project</a> of mine investigates the soft error rate of logic in emerging technologies, specifically a 28nm silicon on insulator (SOI) technology. ",
 		"author": "Stevo",
		"tags": [
            "soft errors",
            "radiation",
            "VLSI"
		],
		"month": "March",
		"day": 25,
		"year": 2013
 	},
 	{
		"type": "Blog",
		"title": "Vegetarian Trial",
		"text": "I recently tried removing meat from my diet for 45 days. I expected a noticeable change in my physical and mental states, but failed to experience any such change. But don’t let that stop you from experimenting with it yourself. </p><p>If you would like to cut meat from your diet, here are some helpful suggestions for increasing your probability of success. First, plan out your meals ahead of time. Before I started the vegetarian trial, I collected a list of 20 vegetarian recipes and ideas. Then, every Sunday, I used this list to help plan my meals for the week. Keep in mind that vegetarian meals tend to require more preparation time, so plan your schedule accordingly. Be sure to have some quick snack idea as well for when your mealtime is limited. My quick snack was pasta, although I could eat pasta every day for the rest of my life and be happy. Find something quick that you enjoy and have it on hand. Finally, experiment! There are numerous vegetarian recipes that I overlook simply because I’m hardwired to include a meat in my meals. Don’t be afraid to try something new; your taste buds might surprise you. </p><p>To give you some ideas, here are three recipes that I made and enjoyed during my diet.<ol><li><a href=\"http://www.myrecipes.com/recipe/brown-butter-gnocchi-with-spinach-pine-nuts-10000001867562\">Gnocchi with Spinach and Pine Nuts</a></li><li><a href=\"http://www.foodnetwork.com/recipes/alton-brown/squash-soup-recipe2/index.html\">Squash Soup</a></li><li><a href=\"http://www.myrecipes.com/recipe/grilled-corn-potato-chowder-10000001918508\">Grilled Corn and Potato Chowder</a></li></ol></p><p>After about 45 days, I reverted back to being an omnivore. I started the diet hoping to improve my mental clarity and physical fitness. The experience was fun and different, but I did not get the results I had hoped for. I did find it easy to maintain the diet, though. Every restaurant I went to offered at least one vegetarian option, and they were usually quite tasty. Even a small sandwich shop in San Francisco had one vegetarian burger. I missed out on fried chicken and waffles once, but it became easier to reject meat the longer I stayed on the diet. And now that it’s over, I find myself shying away from meat more often, which I think is generally healthier. The moral is I tried something new and different, and I’ve come away changed, hopefully for the better.",
 		"author": "Stevo",
		"tags": [
        		"review",
            "diets"
		],
		"month": "April",
		"day": 9,
		"year": 2013
 	},
 	{
		"type": "Blog",
		"title": "Standard Cell Library Files",
		"text": "In VLSI design, many different files are often used to describe the same standard cell library.  While each one may give different information, for example layout or timing data, they all define the same cell library. Distinguishing between the different file types and auxiliary files will help in understanding the VLSI flow. Below are common file types and descriptions of the files. </p><p><b>Verilog ( .v )</b><br>Standard cells have Verilog descriptions, which are functional descriptions of each cell (i.e. Y = A + B) but may also have timing information added. For more accurate timing analysis, the Liberty files should be used instead. The Verilog files should be used for functional (RTL) simulations. Note that functional simulations do not require supply, ground, or body connections, so the Verilog cells will not include those pins. If you need those pins, the standard cell library should have a Verilog file ending with allpins.v that includes these pins. Other Verilog versions may be included as well. </p><p><b>VHDL ( .vhd )</b><br>VHSIC Hardware Description Language (VHDL) cells may be included, but Verilog cells are more common. VHDL is another behavioral description language. </p><p><b>Liberty ( .lib )</b><br>Liberty files are at the heart of synthesis CAD tools. Each one contains wire loads and cell parameters at a single process, voltage, and temperature (PVT) operating condition. The included cell parameters are output timing arcs, internal power values, and leakage power values for different cell inputs. Most Liberty files use a non-linear delay model (NLDM), meaning the timing of a cell’s output pin is a function of its input slope and output load capacitance. A composite current source (CCS) model may also be used. This model specifies timing for each cell using a non-linear current source driver instead of an input timing slope. Cells also contain an area and cell footprint. Two cells with the same cell footprint are functionally equivalent but may have different drive strengths. </p><p><b>Synopsys Compiled Library ( .db )</b><br>These files are equivalent to Liberty library files, but they are a compiled, binary version used by Synopsys tools. </p><p><b>LEF ( .lef )</b><br>Library Exchange Format files contain layout information about a design. For a standard cell library, the LEF file includes the cell area, pins, and routing/layout information about the poly and metal layers. Other layers may also be included. Combining LEF with Design Exchange Format (DEF) files produces a complete description of a design after layout. However, since DEF files describe the connections between standard cells, they do not exist for standard cells themselves. </p><p><b>Milkyway ( .mw ) </b><br>Synopsys prefers using compiled, binary file representations. Thus, instead of LEF and DEF files for post-layout design descriptions, Synopsys has their own Milkyway database format for transferring information. These may be .mw directories or regular directories without an ending. They contain physical descriptions, like layer geometries, logical information, like timing and function, and technology information. These data are stored in several views, of which the two most common are CEL and FRAM. The CEL view contains the full layout, while the FRAM view contains just enough for place and route. </p><p><b>SPICE ( .sp )</b><br>Standard cells may have SPICE deck descriptions, distributed in a SPICE file. This SPICE file may end with .sp, .spi, .spf, or something similar. They can be included in another SPICE deck, but a SPICE library is required to run simulation properly. This SPICE library usually ends in .lib, so do not confuse it with a Liberty file. Note that these decks commonly contain parasitic capacitors and resistors for more accurate post-layout simulation. </p><p><b>CDL ( .cdl )</b><br>Circuit Description Language (CDL) is format by Cadence that is very similar to SPICE. It is commonly used to run layout versus schematic (LVS), as it does not contain the parasitic capacitors or resistors. Most .cdl files can also be included in a SPICE deck to simulate quickly. </p><p><b>GDSII ( .gds )</b><br>The Graphic Database System (GDS) stream format is a binary format describing the layout of a design, as well as general artwork. It can be used to import standard cell information into Cadence software. </p><p>The above file types represent only those relevant to standard cell libraries. Numerous other VLSI file types exist, but the above list should get you well on your way to dealing with the complex CAD tools required to design an integrated circuit.",
 		"author": "Stevo",
		"tags": [
        		"VLSI",
            "standard cells",
            "file types"
		],
		"month": "April",
		"day": 22,
		"year": 2013
 	},
 	{
 		"type": "Blog",
		"title": "How to Eat Durian",
		"text": "Don't.",
 		"author": "Stevo",
		"tags": [
        		"funny"
		],
		"month": "May",
		"day": 6,
		"year": 2013
 	}
]
